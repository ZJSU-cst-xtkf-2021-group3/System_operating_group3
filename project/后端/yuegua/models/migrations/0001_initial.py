# Generated by Django 3.2.9 on 2021-11-26 02:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='activity',
            fields=[
                ('AID', models.AutoField(primary_key=True, serialize=False, verbose_name='活动ID')),
                ('Title', models.TextField(verbose_name='活动标题')),
                ('Introduction', models.TextField(verbose_name='活动介绍')),
                ('isEND', models.BooleanField(default=False, verbose_name='正在进行/结束')),
                ('reward', models.IntegerField(default=0, verbose_name='活动EXP奖励')),
            ],
            options={
                'verbose_name': '活动',
                'verbose_name_plural': '活动',
                'db_table': 'activity',
            },
        ),
        migrations.CreateModel(
            name='activity_contribute',
            fields=[
                ('A_CID', models.AutoField(primary_key=True, serialize=False, verbose_name='投稿ID')),
                ('AID', models.IntegerField(verbose_name='所属活动ID')),
                ('UID', models.IntegerField(verbose_name='发布者ID')),
                ('time', models.IntegerField(verbose_name='发布时间')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('statement', models.TextField(verbose_name='导语')),
                ('star', models.IntegerField(default=0, verbose_name='点赞数')),
                ('tip_off', models.IntegerField(default=0, verbose_name='举报数')),
                ('status', models.BooleanField(default=True, verbose_name='已发布/待审核')),
                ('text', models.TextField(verbose_name='投稿文字内容')),
            ],
            options={
                'verbose_name': '活动投稿',
                'verbose_name_plural': '活动投稿',
                'db_table': 'activity_contribute',
            },
        ),
        migrations.CreateModel(
            name='activity_vote',
            fields=[
                ('AID', models.IntegerField(verbose_name='活动ID')),
                ('ID', models.AutoField(primary_key=True, serialize=False, verbose_name='选项ID')),
                ('item', models.CharField(max_length=255, verbose_name='条目名')),
                ('counts', models.IntegerField(verbose_name='计数')),
            ],
            options={
                'verbose_name': '活动投票',
                'verbose_name_plural': '活动投票',
                'db_table': 'activity_vote',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('CID', models.AutoField(primary_key=True, serialize=False, verbose_name='评论ID')),
                ('UID', models.IntegerField(verbose_name='用户ID')),
                ('TID', models.IntegerField(verbose_name='所属话题ID')),
                ('value', models.TextField(verbose_name='评论内容')),
                ('time', models.IntegerField(verbose_name='发布时间')),
                ('star', models.IntegerField(verbose_name='点赞数')),
                ('tip_off', models.IntegerField(verbose_name='举报数')),
                ('status', models.BooleanField(default=True, verbose_name='显示/下架锁定')),
            ],
            options={
                'verbose_name': '用户评论',
                'verbose_name_plural': '用户评论',
                'db_table': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='contributes_Pic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('A_CID', models.IntegerField(verbose_name='所属活动投稿ID')),
                ('img', models.ImageField(default='/static/img/default.png', upload_to='tougao', verbose_name='爆料图片')),
            ],
            options={
                'verbose_name': '活动投稿图片',
                'verbose_name_plural': '活动投稿图片',
                'db_table': 'contributes_Pic',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('EID', models.AutoField(primary_key=True, serialize=False, verbose_name='结点ID')),
                ('PID', models.IntegerField(verbose_name='所属话题ID')),
                ('UID', models.IntegerField(verbose_name='发布者ID')),
                ('time', models.IntegerField(verbose_name='发布时间')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('statement', models.TextField(verbose_name='导语')),
                ('star', models.IntegerField(verbose_name='点赞数')),
                ('tip_off', models.IntegerField(verbose_name='举报数')),
                ('status', models.BooleanField(default=True, verbose_name='已发布/待审核')),
                ('isPostByEditor', models.BooleanField(default=False, verbose_name='是否是编辑发布的内容')),
                ('url', models.CharField(max_length=255, verbose_name='来源URL')),
                ('eventTime', models.DateTimeField(verbose_name='事件的时间节点')),
            ],
            options={
                'verbose_name': '引用',
                'verbose_name_plural': '引用',
                'db_table': 'Events',
            },
        ),
        migrations.CreateModel(
            name='index_pic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PID', models.IntegerField(verbose_name='所属话题ID')),
                ('img', models.ImageField(default='/static/img/default.png', upload_to='index', verbose_name='图片url')),
            ],
            options={
                'verbose_name': '首页图',
                'verbose_name_plural': '首页图',
                'db_table': 'index_pic',
            },
        ),
        migrations.CreateModel(
            name='message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UID', models.IntegerField(verbose_name='目标用户ID')),
                ('type', models.IntegerField(verbose_name='类型')),
                ('value', models.CharField(max_length=255, verbose_name='标题')),
                ('postTime', models.DateTimeField(verbose_name='推送时间')),
            ],
            options={
                'verbose_name': '消息',
                'verbose_name_plural': '消息',
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Revelation',
            fields=[
                ('RID', models.AutoField(primary_key=True, serialize=False, verbose_name='爆料ID')),
                ('PID', models.IntegerField(verbose_name='所属话题ID')),
                ('UID', models.IntegerField(verbose_name='发布者ID')),
                ('time', models.IntegerField(verbose_name='发布时间')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('statement', models.TextField(verbose_name='导语')),
                ('star', models.IntegerField(default=0, verbose_name='点赞数')),
                ('tip_off', models.IntegerField(default=0, verbose_name='举报数')),
                ('status', models.BooleanField(default=True, verbose_name='已发布/待审核')),
                ('isPostByEditor', models.BooleanField(default=False, verbose_name='是否是编辑发布的内容')),
                ('text', models.TextField(verbose_name='爆料内容')),
                ('eventTime', models.DateTimeField(verbose_name='事件的时间节点')),
            ],
            options={
                'verbose_name': '爆料',
                'verbose_name_plural': '爆料',
                'db_table': 'Revelation',
            },
        ),
        migrations.CreateModel(
            name='Revelation_Pic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EID', models.IntegerField(verbose_name='所属报料ID')),
                ('img', models.ImageField(default='/static/img/default.png', upload_to='baoliao', verbose_name='爆料图片')),
            ],
            options={
                'verbose_name': '爆料图片',
                'verbose_name_plural': '爆料图片',
                'db_table': 'Revelation_Pic',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('TID', models.AutoField(primary_key=True, serialize=False, verbose_name='话题ID')),
                ('UID', models.IntegerField(verbose_name='发布者ID')),
                ('category', models.IntegerField(verbose_name='话题所属类别')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('statement', models.TextField(verbose_name='导语')),
                ('time', models.IntegerField(verbose_name='发布时间')),
                ('star', models.IntegerField(verbose_name='点赞数')),
                ('tip_off', models.IntegerField(verbose_name='举报数')),
                ('status', models.BooleanField(default=True, verbose_name='已发布/待审核')),
                ('isPostByEditor', models.BooleanField(default=False, verbose_name='是否是编辑发布的内容')),
                ('lastUpDateTime', models.IntegerField(verbose_name='话题最后更新时间')),
                ('Fcounts', models.IntegerField(default=0, verbose_name='关注数')),
                ('Tag', models.CharField(default='', max_length=255, verbose_name='标签')),
            ],
            options={
                'verbose_name': '话题',
                'verbose_name_plural': '话题',
                'db_table': 'Topic',
            },
        ),
        migrations.CreateModel(
            name='topic_vote',
            fields=[
                ('TID', models.IntegerField(verbose_name='话题ID')),
                ('ID', models.AutoField(primary_key=True, serialize=False, verbose_name='选项ID')),
                ('item', models.CharField(max_length=255, verbose_name='条目名')),
                ('counts', models.IntegerField(verbose_name='计数')),
            ],
            options={
                'verbose_name': '话题投票',
                'verbose_name_plural': '话题投票',
                'db_table': 'topic_vote',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('UID', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('Uname', models.CharField(default='unnamed', max_length=25, verbose_name='用户名')),
                ('Passwd', models.CharField(default='password-not-set', max_length=25, verbose_name='密码')),
                ('isEDIT', models.BooleanField(default=False, verbose_name='是否为编辑')),
                ('header', models.ImageField(default='/static/img/default.png', upload_to='userHeader', verbose_name='用户头像')),
                ('AgeRange', models.IntegerField(verbose_name='年龄段')),
                ('rank', models.IntegerField(verbose_name='用户等级')),
                ('introduction', models.TextField(verbose_name='个人介绍')),
                ('wechatID', models.CharField(default='WeiChatID-not-set', max_length=30, verbose_name='微信ID')),
                ('EXP', models.IntegerField(verbose_name='经验值')),
                ('Fcounts', models.IntegerField(default=0, verbose_name='关注人数')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='userFollow_topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UID', models.IntegerField(verbose_name='用户ID')),
                ('FTID', models.IntegerField(verbose_name='被关注人的ID')),
                ('AgeRange', models.IntegerField(default='0', verbose_name='年龄段')),
                ('lastVisitTime', models.IntegerField(default=0, verbose_name='最后访问时间戳')),
            ],
            options={
                'verbose_name': '用户关注的话题',
                'verbose_name_plural': '用户关注的话题',
                'db_table': 'userFollow_topic',
            },
        ),
        migrations.CreateModel(
            name='userFollow_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UID', models.IntegerField(verbose_name='用户ID')),
                ('FUID', models.IntegerField(verbose_name='被关注人的ID')),
                ('FUname', models.CharField(default='unnamed', max_length=25, verbose_name='被关注人的用户名')),
                ('AgeRange', models.IntegerField(default='0', verbose_name='年龄段')),
                ('lastVisitTime', models.IntegerField(default=0, verbose_name='最后访问时间戳')),
            ],
            options={
                'verbose_name': '用户关注的博主',
                'verbose_name_plural': '用户关注的博主',
                'db_table': 'userFollow_user',
            },
        ),
        migrations.CreateModel(
            name='userInterests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UID', models.IntegerField(verbose_name='用户ID')),
                ('field', models.IntegerField(verbose_name='兴趣领域')),
            ],
            options={
                'verbose_name': '用户兴趣',
                'verbose_name_plural': '用户兴趣',
                'db_table': 'UserInterests',
            },
        ),
        migrations.CreateModel(
            name='userPrivacy',
            fields=[
                ('UID', models.IntegerField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('public', models.BooleanField(default=True, verbose_name='是否仅关注后可见')),
                ('public_Ftopic', models.BooleanField(default=True, verbose_name='是否展示关注的话题')),
                ('public_Fuser', models.BooleanField(default=True, verbose_name='是否展示关注的人')),
                ('public_comments', models.BooleanField(default=True, verbose_name='是否展示发表的评论')),
                ('public_events', models.BooleanField(default=True, verbose_name='是否发表的报料')),
                ('public_topics', models.BooleanField(default=True, verbose_name='是否展示发表的话题')),
            ],
            options={
                'verbose_name': '用户空间权限',
                'verbose_name_plural': '用户空间权限',
                'db_table': 'userPrivacy',
            },
        ),
    ]
